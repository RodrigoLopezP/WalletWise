// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WalletWise.Models.Services.Infrastructure;

#nullable disable

namespace WalletWise.Migrations
{
    [DbContext(typeof(DbContextWalletWise))]
    [Migration("20231220223506_AddColumn-ExpenNote")]
    partial class AddColumnExpenNote
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_bin")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("WalletWise.Models.Entities.Currency", b =>
                {
                    b.Property<int>("CurrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("curr_id");

                    b.Property<string>("CurrAcronym")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("curr_acronym");

                    b.Property<string>("CurrName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("curr_name");

                    b.HasKey("CurrId")
                        .HasName("PRIMARY");

                    b.ToTable("currencies", (string)null);
                });

            modelBuilder.Entity("WalletWise.Models.Entities.Expense", b =>
                {
                    b.Property<int>("ExpenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("expen_id");

                    b.Property<int>("ExpenCurrencyId")
                        .HasColumnType("int")
                        .HasColumnName("expen_curr_id");

                    b.Property<DateTime>("ExpenDate")
                        .HasColumnType("date")
                        .HasColumnName("expen_date");

                    b.Property<string>("ExpenLocation")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("expen_location");

                    b.Property<DateTime>("ExpenModTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("expen_mod_timestamp");

                    b.Property<string>("ExpenName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("expen_name");

                    b.Property<string>("ExpenNote")
                        .HasColumnType("text")
                        .HasColumnName("expen_note");

                    b.Property<int?>("ExpenTag1")
                        .HasColumnType("int")
                        .HasColumnName("expen_tag1");

                    b.Property<int?>("ExpenTag2")
                        .HasColumnType("int")
                        .HasColumnName("expen_tag2");

                    b.Property<int?>("ExpenTag3")
                        .HasColumnType("int")
                        .HasColumnName("expen_tag3");

                    b.Property<int?>("ExpenTag4")
                        .HasColumnType("int")
                        .HasColumnName("expen_tag4");

                    b.Property<int?>("ExpenTag5")
                        .HasColumnType("int")
                        .HasColumnName("expen_tag5");

                    b.Property<decimal>("ExpenTotalAmount")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)")
                        .HasColumnName("expen_total_amount");

                    b.Property<string>("ExpenUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("expen_user_id");

                    b.HasKey("ExpenId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ExpenCurrencyId" }, "FK_currency_expenses");

                    b.HasIndex(new[] { "ExpenTag1" }, "FK_tags_expenses1");

                    b.HasIndex(new[] { "ExpenTag2" }, "FK_tags_expenses2");

                    b.HasIndex(new[] { "ExpenTag3" }, "FK_tags_expenses3");

                    b.HasIndex(new[] { "ExpenTag4" }, "FK_tags_expenses4");

                    b.HasIndex(new[] { "ExpenTag5" }, "FK_tags_expenses5");

                    b.ToTable("expenses", (string)null);
                });

            modelBuilder.Entity("WalletWise.Models.Entities.ExpenseDetail", b =>
                {
                    b.Property<int>("ExdetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("exdet_id");

                    b.Property<decimal>("ExdetAmount")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)")
                        .HasColumnName("exdet_amount");

                    b.Property<int>("ExdetCurrencyId")
                        .HasColumnType("int")
                        .HasColumnName("exdet_curr_id");

                    b.Property<int>("ExdetExpenId")
                        .HasColumnType("int")
                        .HasColumnName("exdet_expen_id");

                    b.Property<DateTime>("ExdetModTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("exdet_mod_timestamp");

                    b.Property<string>("ExdetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("exdet_name");

                    b.HasKey("ExdetId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ExdetCurrencyId" }, "FK_currency_expense_details");

                    b.HasIndex(new[] { "ExdetExpenId" }, "FK_expenses_expense_details");

                    b.ToTable("expense_details", (string)null);
                });

            modelBuilder.Entity("WalletWise.Models.Entities.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tag_id");

                    b.Property<string>("TagDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("tag_description");

                    b.Property<DateTime>("TagModTimestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("tag_mod_timestamp");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tag_name");

                    b.Property<string>("TagUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tag_user_id");

                    b.HasKey("TagId")
                        .HasName("PRIMARY");

                    b.ToTable("tags", (string)null);
                });

            modelBuilder.Entity("WalletWise.Models.Entities.Expense", b =>
                {
                    b.HasOne("WalletWise.Models.Entities.Currency", "ExpenCurrencyNavigation")
                        .WithMany("CurrencyExpenseNavigations")
                        .HasForeignKey("ExpenCurrencyId")
                        .IsRequired()
                        .HasConstraintName("FK_currency_expenses");

                    b.HasOne("WalletWise.Models.Entities.Tag", "ExpenTag1Navigation")
                        .WithMany("ExpenseExpenTag1Navigations")
                        .HasForeignKey("ExpenTag1")
                        .HasConstraintName("FK_tags_expenses1");

                    b.HasOne("WalletWise.Models.Entities.Tag", "ExpenTag2Navigation")
                        .WithMany("ExpenseExpenTag2Navigations")
                        .HasForeignKey("ExpenTag2")
                        .HasConstraintName("FK_tags_expenses2");

                    b.HasOne("WalletWise.Models.Entities.Tag", "ExpenTag3Navigation")
                        .WithMany("ExpenseExpenTag3Navigations")
                        .HasForeignKey("ExpenTag3")
                        .HasConstraintName("FK_tags_expenses3");

                    b.HasOne("WalletWise.Models.Entities.Tag", "ExpenTag4Navigation")
                        .WithMany("ExpenseExpenTag4Navigations")
                        .HasForeignKey("ExpenTag4")
                        .HasConstraintName("FK_tags_expenses4");

                    b.HasOne("WalletWise.Models.Entities.Tag", "ExpenTag5Navigation")
                        .WithMany("ExpenseExpenTag5Navigations")
                        .HasForeignKey("ExpenTag5")
                        .HasConstraintName("FK_tags_expenses5");

                    b.Navigation("ExpenCurrencyNavigation");

                    b.Navigation("ExpenTag1Navigation");

                    b.Navigation("ExpenTag2Navigation");

                    b.Navigation("ExpenTag3Navigation");

                    b.Navigation("ExpenTag4Navigation");

                    b.Navigation("ExpenTag5Navigation");
                });

            modelBuilder.Entity("WalletWise.Models.Entities.ExpenseDetail", b =>
                {
                    b.HasOne("WalletWise.Models.Entities.Currency", "ExdetCurrencyNavigation")
                        .WithMany("CurrencyExpensedetailNavigations")
                        .HasForeignKey("ExdetCurrencyId")
                        .IsRequired()
                        .HasConstraintName("FK_currency_expense_details");

                    b.HasOne("WalletWise.Models.Entities.Expense", "ExdetExpen")
                        .WithMany("ExpenseDetails")
                        .HasForeignKey("ExdetExpenId")
                        .IsRequired()
                        .HasConstraintName("FK_expenses_expense_details");

                    b.Navigation("ExdetCurrencyNavigation");

                    b.Navigation("ExdetExpen");
                });

            modelBuilder.Entity("WalletWise.Models.Entities.Currency", b =>
                {
                    b.Navigation("CurrencyExpenseNavigations");

                    b.Navigation("CurrencyExpensedetailNavigations");
                });

            modelBuilder.Entity("WalletWise.Models.Entities.Expense", b =>
                {
                    b.Navigation("ExpenseDetails");
                });

            modelBuilder.Entity("WalletWise.Models.Entities.Tag", b =>
                {
                    b.Navigation("ExpenseExpenTag1Navigations");

                    b.Navigation("ExpenseExpenTag2Navigations");

                    b.Navigation("ExpenseExpenTag3Navigations");

                    b.Navigation("ExpenseExpenTag4Navigations");

                    b.Navigation("ExpenseExpenTag5Navigations");
                });
#pragma warning restore 612, 618
        }
    }
}
